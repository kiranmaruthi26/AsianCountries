{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","countries","setCounteries","useEffect","a","fetch","response","json","data","getData","className","map","country","index","id","src","flag","name","capital","region","subregion","nativeName","population","timezones","borders","border","bindex","languages","lang","lindex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,YCyEAA,MApEf,WAEE,MAAiCC,mBAAS,MAA1C,mBAAMC,EAAN,KAAgBC,EAAhB,KAmBA,OAjBAC,qBAAU,WAAM,4CAKd,8BAAAC,EAAA,sEACyBC,MAAM,gDAD/B,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQC,EAFR,OAKEN,EAAcM,GALhB,4CALc,0DACdC,KAaC,IAID,sBAAKC,UAAU,MAAf,UACE,iDAEGT,GACC,qBAAKS,UAAU,0BAAf,SAGGT,EAAUU,KAAI,SAACC,EAASC,GAAV,OACb,qBAAiBH,UAAU,mBAA3B,SAEE,8BACE,sBAAKA,UAAU,OAAOI,GAAG,OAAzB,UACE,qBAAKJ,UAAU,eAAeK,IAAKH,EAAQI,OAC3C,sBAAKN,UAAU,YAAf,UACA,oBAAIA,UAAU,wCAAd,SAAuDE,EAAQK,OAC/D,oBAAGP,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,uBAAzB,IAAqEE,EAAQM,WAC7E,oBAAGR,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,sBAAzB,IAAoEE,EAAQO,UAC5E,oBAAGT,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,wBAAzB,MAAwEE,EAAQQ,aAChF,oBAAGV,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,0BAAzB,IAAwEE,EAAQS,cAChF,oBAAGX,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,0BAAzB,IAAwEE,EAAQU,cAChF,oBAAGZ,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,yBAAzB,IAAuEE,EAAQW,aAE9EX,EAAQY,QAAQb,KAAI,SAACc,EAAOC,GAAR,OACnB,8BACE,oBAAGhB,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,sBAAzB,IAAoEe,MAD5DC,MAKXd,EAAQe,UAAUhB,KAAI,SAACiB,EAAMC,GAAP,OACrB,8BACE,oBAAGnB,UAAU,YAAb,UAAyB,sBAAMA,UAAU,UAAhB,wBAAzB,IAAsEkB,EAAKX,KAA3E,MAAoFW,EAAKP,WAAzF,SADQQ,eArBRhB,YCvBTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5d8ef41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n\n  const[countries,setCounteries] = useState(null);\n\n  useEffect(() => {\n    getData();\n\n\n\n    async function getData(){\n      const response = await fetch('https://restcountries.eu/rest/v2/region/Asia');\n      const data = await response.json();\n  \n  \n      setCounteries(data);\n    }\n\n\n  }, []);\n  \n\n  return (\n    <div className=\"App\">\n      <h3>Asian Countries</h3>\n      \n        {countries &&(\n          <div className=\"countries row container\">\n            {/*loop books*/}\n\n            {countries.map((country, index) => (\n              <div key={index} className=\"col-sm-3 m-2 p-2\" >\n\n                <div>\n                  <div className=\"card\" id=\"card\">  \n                    <img className=\"card-img-top\" src={country.flag}/>\n                    <div className=\"card-body\">\n                    <h3 className=\"card-title fst-italic text-uppercase \">{country.name}</h3>\n                    <p className=\"card-text\"><span className=\"fw-bold\">Capital :</span> {country.capital}</p>\n                    <p className=\"card-text\"><span className=\"fw-bold\">Region :</span> {country.region}</p>\n                    <p className=\"card-text\"><span className=\"fw-bold\">Sub Region</span> : {country.subregion}</p>\n                    <p className=\"card-text\"><span className=\"fw-bold\">NativeName :</span> {country.nativeName}</p>\n                    <p className=\"card-text\"><span className=\"fw-bold\">Population :</span> {country.population}</p>  \n                    <p className=\"card-text\"><span className=\"fw-bold\">Time Zone :</span> {country.timezones}</p> \n\n                    {country.borders.map((border,bindex) =>(\n                      <div key={bindex}>\n                        <p className=\"card-text\"><span className=\"fw-bold\">Border :</span> {border}</p>\n                      </div>\n                    ))}\n\n                    {country.languages.map((lang, lindex)=>(\n                      <div key={lindex}>\n                        <p className=\"card-text\"><span className=\"fw-bold\">Language :</span> {lang.name} ( {lang.nativeName} )</p>\n                      </div>\n                    ))}\n                      \n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            ))}\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}